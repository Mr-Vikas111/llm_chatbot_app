{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Documents/document/LLM Demo/chatbot_app/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [userQuery, setUserQuery] = useState('');\n  const [sqlQuery, setSqlQuery] = useState('');\n  const [results, setResults] = useState([]);\n  const [error, setError] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    setSqlQuery('');\n    setResults([]);\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/query`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user_query: userQuery\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) throw new Error(data.detail || 'Error processing query');\n      setSqlQuery(data.sql);\n      setResults(data.results);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"LLM-Powered Chatbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your query...\",\n        value: userQuery,\n        onChange: e => setUserQuery(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this), sqlQuery && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"output\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Generated SQL:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: sqlQuery\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), results.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"output\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Query Results:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: Object.keys(results[0]).map((col, idx) => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: col\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 60\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: results.map((row, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: Object.values(row).map((val, j) => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: val\n            }, j, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 55\n            }, this))\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"uIhD0vMIf1hxv9zfR8x0RJqrUPo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","userQuery","setUserQuery","sqlQuery","setSqlQuery","results","setResults","error","setError","handleSubmit","e","preventDefault","response","fetch","process","env","REACT_APP_API_URL","method","headers","body","JSON","stringify","user_query","data","json","ok","Error","detail","sql","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","length","Object","keys","map","col","idx","row","i","values","val","j","_c","$RefreshReg$"],"sources":["/Users/apple/Documents/document/LLM Demo/chatbot_app/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [userQuery, setUserQuery] = useState('');\n  const [sqlQuery, setSqlQuery] = useState('');\n  const [results, setResults] = useState([]);\n  const [error, setError] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n    setSqlQuery('');\n    setResults([]);\n\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/query`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ user_query: userQuery })\n      });\n\n      const data = await response.json();\n      if (!response.ok) throw new Error(data.detail || 'Error processing query');\n      \n      setSqlQuery(data.sql);\n      setResults(data.results);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>LLM-Powered Chatbot</h1>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Enter your query...\"\n          value={userQuery}\n          onChange={(e) => setUserQuery(e.target.value)}\n          required\n        />\n        <button type=\"submit\">Submit</button>\n      </form>\n\n      {error && <p className=\"error\">{error}</p>}\n      {sqlQuery && (\n        <div className=\"output\">\n          <h3>Generated SQL:</h3>\n          <pre>{sqlQuery}</pre>\n        </div>\n      )}\n      {results.length > 0 && (\n        <div className=\"output\">\n          <h3>Query Results:</h3>\n          <table>\n            <thead>\n              <tr>\n                {Object.keys(results[0]).map((col, idx) => <th key={idx}>{col}</th>)}\n              </tr>\n            </thead>\n            <tbody>\n              {results.map((row, i) => (\n                <tr key={i}>\n                  {Object.values(row).map((val, j) => <td key={j}>{val}</td>)}\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}